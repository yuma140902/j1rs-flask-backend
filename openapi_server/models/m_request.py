# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model_ import Model
from openapi_server import util


class MRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, index=None, value=None):  # noqa: E501
        """MRequest - a model defined in OpenAPI

        :param index: The index of this MRequest.  # noqa: E501
        :type index: int
        :param value: The value of this MRequest.  # noqa: E501
        :type value: float
        """
        self.openapi_types = {
            'index': int,
            'value': float
        }

        self.attribute_map = {
            'index': 'index',
            'value': 'value'
        }

        self._index = index
        self._value = value

    @classmethod
    def from_dict(cls, dikt) -> 'MRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The m_request of this MRequest.  # noqa: E501
        :rtype: MRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def index(self):
        """Gets the index of this MRequest.


        :return: The index of this MRequest.
        :rtype: int
        """
        return self._index

    @index.setter
    def index(self, index):
        """Sets the index of this MRequest.


        :param index: The index of this MRequest.
        :type index: int
        """
        if index is None:
            raise ValueError("Invalid value for `index`, must not be `None`")  # noqa: E501

        self._index = index

    @property
    def value(self):
        """Gets the value of this MRequest.


        :return: The value of this MRequest.
        :rtype: float
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this MRequest.


        :param value: The value of this MRequest.
        :type value: float
        """
        if value is None:
            raise ValueError("Invalid value for `value`, must not be `None`")  # noqa: E501

        self._value = value
